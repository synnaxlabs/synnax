cc_library(
    name = "ni",
    srcs = [
        "factory.cpp",
        "scanner.cpp",
    ],
    hdrs = [
        "channels.h",
        "ni.h",
        "read_task.h",
        "scale.h",
        "scanner.h",
        "util.h",
        "write_task.h",
    ],
    copts = select({
        "@platforms//os:windows": ["/std:c++20"],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//client/cpp:synnax",
        "//driver/errors",
        "//driver/ni/daqmx",
        "//driver/ni/syscfg",
        "//driver/pipeline",
        "//driver/task",
        "//x/cpp/breaker",
        "//x/cpp/doublebuffer",
        "//x/cpp/loop",
        "//x/cpp/xjson",
        "@nlohmann_json//:json",
    ],
)

cc_test(
    name = "channels_test",
    srcs = [
        "channels_tests.cpp",
    ],
    copts = select({
        "@platforms//os:windows": ["/std:c++20"],
        "//conditions:default": [],
    }),
    tags = ["hardware"],
    deps = [
        "ni",
        "//client/cpp/testutil",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "read_task_test",
    srcs = [
        "read_task_test.cpp",
    ],
    copts = select({
        "@platforms//os:windows": ["/std:c++20"],
        "//conditions:default": [],
    }),
    tags = ["hardware"],
    deps = [
        "ni",
        "//client/cpp/testutil",
        "//driver/pipeline/mock",
        "//x/cpp/xtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "digital_read_test",
    srcs = [
        "digital_read_test.cpp",
    ],
    copts = select({
        "@platforms//os:windows": ["/std:c++20"],
        "//conditions:default": [],
    }),
    tags = ["hardware"],
    deps = [
        "ni",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "scanner_test",
    srcs = [
        "scanner_test.cpp",
    ],
    copts = select({
        "@platforms//os:windows": ["/std:c++20"],
        "//conditions:default": [],
    }),
    tags = ["hardware"],
    deps = [
        "ni",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "writer_test",
    srcs = [
        "writer_test.cpp",
    ],
    copts = select({
        "@platforms//os:windows": ["/std:c++20"],
        "//conditions:default": [],
    }),
    tags = ["hardware"],
    deps = [
        "ni",
        "@com_google_googletest//:gtest_main",
    ],
)
