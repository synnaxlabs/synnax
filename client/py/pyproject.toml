[project]
name = "synnax"
version = "0.41.0"
description = "Synnax Client Library"
keywords = ["Synnax", "Synnax Python Client"]
authors = [{ name = "Emiliano Bonilla", email = "ebonilla@synnaxlabs.com" }]
requires-python = ">=3.11,<4"
dynamic = ["dependencies"]

[project.scripts]
sy = "synnax.cli.synnax:synnax"

[project.urls]
Homepage = "https://synnaxlabs.com"
Repository = "https://github.com/synnaxlabs/synnax"


[tool.poetry.dependencies]
alamos = { path = "../../alamos/py", develop = true }
click = "^8.1.8"
keyring = "^25.6.0"
nptdms = "^1.10.0"
numpy = "^2.2.4"
pandas = "^2.2.3"
pydantic = "^2.10.6"
rich = "^13.9.4"
synnax-freighter = { path = "../../freighter/py", develop = true }
urllib3 = "^2.3.0"


[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
isort = "^6.0.1"
matplotlib = "^3.10.1"
mypy = "^1.15.0"
poetry = "^2.1.1"
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
scipy = "^1.15.2"
vermin = "^1.6.0"


[tool.isort]
profile = "black"


[tool.mypy]
plugins = ["numpy.typing.mypy_plugin", "pydantic.mypy"]
strict = true


[tool.pydantic-mypy]
init_forbid_extra = true
init_types = true
warn_required_dynamic_aliases = true


[tool.pytest.ini_options]
markers = [
    "access: mark test as an access test",
    "auth: mark test as an auth test",
    "channel: mark test as a channel test",
    "cli: mark test as a cli test",
    "control: mark test as a control test",
    "device: mark test as a device test",
    "framer: mark test as a framer test",
    "iterator: mark test as a reader test",
    "internal: mark test as an internal test",
    "io: mark test as an io test",
    "multi_node: mark test as a multi_node test",
    "ni: mark test as a ni test",
    "ontology: mark test as an ontology test",
    "opcua: mark test as an opcua test",
    "rack: mark test as a rack test",
    "ranger: mark test as a ranger test",
    "sequence: mark test as a sequence test",
    "series: mark test as a series test",
    "task: mark test as a task test",
    "tdms: mark test as a tdms test",
    "telem: mark test as a telem test",
    "timing: mark test as a timing test",
    "tsconvert: mark test as a tsconvert test",
    "writer: mark test as a writer test",
    "focus: marker to temporarily focus a test",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
