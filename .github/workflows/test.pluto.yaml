name: Test - Pluto

on:
  pull_request:
    paths:
      - .github/workflows/test.pluto.yaml
      - alamos/ts/**
      - client/ts/**
      - configs/eslint/**
      - configs/stylelint/**
      - configs/ts/**
      - configs/vite/**
      - freighter/ts/**
      - package.json
      - pluto/**
      - pnpm-lock.yaml
      - pnpm-workspace.yaml
      - turbo.json
      - x/media/**
      - x/ts/**
  push:
    branches:
      - main
      - rc
  workflow_dispatch:

jobs:
  server:
    name: Build - Server
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Earthly
        uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        run: earthly --push +docker -tag=${GITHUB_SHA} -driver=false
        working-directory: core

      - name: Push to GHCR
        run: docker push ghcr.io/synnaxlabs/synnax:${GITHUB_SHA}

  test:
    runs-on: ubuntu-latest
    needs: server
    services:
      synnax:
        image: ghcr.io/synnaxlabs/synnax:${{ github.sha }}
        env:
          SYNNAX_VERBOSE: true
          SYNNAX_INSECURE: true
          SYNNAX_MEM: true
          SYNNAX_LICENSE_KEY: ${{ secrets.SYNNAX_LICENSE_KEY }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 9090:9090
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Build
        run: pnpm build:pluto

      - name: Lint
        run: pnpm lint:pluto

      - name: Test
        run: pnpm test:pluto
