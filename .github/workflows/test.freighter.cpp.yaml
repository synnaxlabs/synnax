name: Test - Freighter (C++)

on:
  pull_request:
    paths:
      - .bazeliskrc
      - .bazelrc
      - .clang-format
      - .clang-format-ignore
      - .github/workflows/test.freighter.cpp.yaml
      - freighter/cpp/**
      - MODULE.bazel
      - MODULE.bazel.lock
      - scripts/check_clang_format.sh
      - scripts/sanitizers/**
      - x/cpp/**
      - x/go/**/*.pb.go
  push:
    branches:
      - main
      - rc
    paths:
      - .bazeliskrc
      - .bazelrc
      - .clang-format
      - .clang-format-ignore
      - .github/workflows/test.freighter.cpp.yaml
      - freighter/cpp/**
      - MODULE.bazel
      - MODULE.bazel.lock
      - scripts/check_clang_format.sh
      - scripts/sanitizers/**
      - x/cpp/**
      - x/go/**/*.pb.go
  workflow_dispatch:

jobs:
  test:
    name: Test (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            format: true
        exclude:
          - os:
              ${{ github.event_name != 'workflow_dispatch' && (github.ref !=
              'refs/heads/main' && github.base_ref != 'main') && 'macos-latest' }}
          - os:
              ${{ github.event_name != 'workflow_dispatch' && (github.ref !=
              'refs/heads/main' && github.base_ref != 'main') && 'windows-latest' }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}-${{ matrix.os }}
          repository-cache: true

      - name: Install Clang Format
        if: matrix.format
        run: |
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          sudo apt-get install -y clang-format-20
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-20 100
          sudo update-alternatives --set clang-format /usr/bin/clang-format-20

      - name: Check Formatting
        if: matrix.format
        run: scripts/check_clang_format.sh freighter/cpp

      - name: Test (macOS)
        if: matrix.os == 'macos-latest'
        run:
          bazel test --config=asan --test_output=all //freighter/cpp/...
          --test_tag_filters=-no-asan
        shell: bash

      - name: Test (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: bazel test --config=asan-leak --test_output=all //freighter/cpp/...
        shell: bash

      - name: Test (Windows)
        if: matrix.os == 'windows-latest'
        run: bazel test --test_output=all //freighter/cpp/...
        shell: bash
