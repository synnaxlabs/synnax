name: Test - Freighter (Python & TypeScript)

on:
  pull_request:
    paths:
      - .github/workflows/test.freighter.yaml
      - alamos/go/**
      - alamos/py/**
      - alamos/ts/**
      - configs/eslint/**
      - configs/ts/**
      - configs/vite/**
      - freighter/go/**
      - freighter/integration/**
      - freighter/py/**
      - freighter/ts/**
      - go.work
      - go.work.sum
      - package.json
      - pnpm-lock.yaml
      - pnpm-workspace.yaml
      - scripts/check-gofmt.sh
      - turbo.json
      - x/go/**
      - x/ts/**
  push:
    branches:
      - main
      - rc
  workflow_dispatch:

jobs:
  changes:
    name: Changes
    runs-on: ubuntu-latest
    outputs:
      integration: ${{ steps.filter.outputs.integration }}
      py: ${{ steps.filter.outputs.py }}
      ts: ${{ steps.filter.outputs.ts }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Diff Changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            server: &server
              - .github/workflows/test.freighter.yaml
              - alamos/go/**
              - freighter/go/**
              - freighter/integration/**
              - go.work
              - go.work.sum
              - x/go/**
            integration:
              - *server
              - scripts/check-gofmt.sh
            py:
              - *server
              - alamos/py/**
              - freighter/py/**
            ts:
              - *server
              - alamos/ts/**
              - configs/eslint/**
              - configs/ts/**
              - configs/vite/**
              - freighter/ts/**
              - package.json
              - pnpm-lock.yaml
              - pnpm-workspace.yaml
              - turbo.json
              - x/ts/**

  server:
    name: Server
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.py == 'true' || needs.changes.outputs.ts == 'true'
    permissions:
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Earthly
        uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        run: earthly --push +docker
        working-directory: freighter/integration

  integration:
    name: Test - Integration
    needs: changes
    runs-on: ubuntu-latest
    if: needs.changes.outputs.integration == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          cache-dependency-path: go.work.sum

      - name: Check Formatting
        run: ./scripts/check-gofmt.sh freighter/integration

  py:
    name: Test - Python
    needs: [changes, server]
    if: needs.changes.outputs.py == 'true'
    runs-on: ubuntu-latest
    services:
      integration:
        image: ghcr.io/synnaxlabs/freighter-go-integration:latest
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: freighter/py/pyproject.toml
          cache: poetry

      - name: Install Dependencies
        run: poetry install
        working-directory: freighter/py

      - name: isort
        run: poetry run isort -c .
        working-directory: freighter/py

      - name: Format
        run: poetry run black --check --diff --color .
        working-directory: freighter/py

      - name: Mypy
        run: poetry run mypy .
        working-directory: freighter/py

      - name: Test
        run: poetry run pytest
        working-directory: freighter/py

  ts:
    name: Test - TypeScript
    needs: [changes, server]
    if: needs.changes.outputs.ts == 'true'
    runs-on: ubuntu-latest
    services:
      integration:
        image: ghcr.io/synnaxlabs/freighter-go-integration:latest
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Build
        run: pnpm build:freighter

      - name: Lint
        run: pnpm lint:freighter

      - name: Test
        run: pnpm test:freighter
