name: Test - X (C++)

on:
  pull_request:
    paths:
      - .bazeliskrc
      - .bazelrc
      - .clang-format
      - .clang-format-ignore
      - .github/workflows/test.x.cpp.yaml
      - MODULE.bazel
      - MODULE.bazel.lock
      - scripts/check-clang-format.sh
      - x/cpp/**
      - x/go/**/*.pb.h
  push:
    branches:
      - main
      - rc
  workflow_dispatch:

jobs:
  test:
    name: Test (${{ matrix.os }})
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            format: true
        exclude:
          - os:
              ${{ (github.ref != 'refs/heads/main' && github.base_ref != 'main') &&
              'macos-latest' }}
          - os:
              ${{ (github.ref != 'refs/heads/main' && github.base_ref != 'main') &&
              'windows-latest' }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}-${{ matrix.os }}
          repository-cache: true

      - name: Install Clang Format
        if: matrix.format
        run: |
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          sudo apt-get install -y clang-format-20
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-20 100
          sudo update-alternatives --set clang-format /usr/bin/clang-format-20

      - name: Check Formatting
        if: matrix.format
        run: scripts/check-clang-format.sh x/cpp

      - name: Test
        run: bazel test --test_output=all //x/cpp/... --nocache_test_results
