name: Test - Migration

on:
  pull_request:
    paths:
      - .github/workflows/test.migration.yaml
      - alamos/go/**
      - alamos/py/**
      - aspen/**
      - cesium/**
      - client/py/**
      - core/**
      - Earthfile
      - freighter/go/**
      - freighter/py/**
      - go.work
      - go.work.sum
      - x/go/**
  push:
    branches:
      - main
      - rc
    paths:
      - .github/workflows/test.migration.yaml
      - alamos/go/**
      - alamos/py/**
      - aspen/**
      - cesium/**
      - client/py/**
      - core/**
      - Earthfile
      - freighter/go/**
      - freighter/py/**
      - go.work
      - go.work.sum
      - x/go/**
  workflow_dispatch:

jobs:
  check-cache:
    name: Check Image Cache
    runs-on: ubuntu-latest
    outputs:
      CACHE_HIT: ${{ steps.check.outputs.CACHE_HIT }}
      IMAGE_SHA: ${{ steps.check.outputs.IMAGE_SHA }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check for Cached Image
        id: check
        env:
          GH_TOKEN: ${{ github.token }}
        run: scripts/check_image_cache.sh

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: check-cache
    permissions:
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Start Main Server
        id: start_main
        run:
          docker run -d --name synnax-main -p 9090:9090 -e SYNNAX_LISTEN=0.0.0.0:9090 -e
          SYNNAX_VERBOSE=true -e SYNNAX_INSECURE=true -e SYNNAX_MEM=false -e
          SYNNAX_LICENSE_KEY=${{ secrets.SYNNAX_LICENSE_KEY }}
          ghcr.io/synnaxlabs/synnax:latest

      - name: Checkout Main Branch
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: client/py/pyproject.toml
          cache: poetry

      - name: Install Dependencies
        run: poetry install
        working-directory: client/py

      - name: Python Test with Main Server
        run: poetry run pytest
        working-directory: client/py

      - name: Stop Main Server
        if: always() && steps.start_main.outcome == 'success'
        run: |
          docker logs synnax-main
          docker stop synnax-main
          docker rm synnax-main

      - name: Checkout Current Branch
        uses: actions/checkout@v5

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull and Retag Cached Image
        if: needs.check-cache.outputs.CACHE_HIT == 'true'
        run: |
          docker pull ghcr.io/synnaxlabs/synnax:${{ needs.check-cache.outputs.IMAGE_SHA }}
          docker tag ghcr.io/synnaxlabs/synnax:${{ needs.check-cache.outputs.IMAGE_SHA }} ghcr.io/synnaxlabs/synnax:${{ github.sha }}
          docker push ghcr.io/synnaxlabs/synnax:${{ github.sha }}

      - name: Set up Docker Buildx
        if: needs.check-cache.outputs.CACHE_HIT == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Current Server Image
        if: needs.check-cache.outputs.CACHE_HIT == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./core/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/synnaxlabs/synnax:${{ github.sha }}
          cache-from: type=gha,scope=test-migration
          cache-to: type=gha,mode=max,scope=test-migration
          build-args: |
            DRIVER_ENABLED=false

      - name: Start Current Server
        id: start_current
        run:
          docker run -d --name synnax-current -p 9090:9090 -e SYNNAX_LISTEN=0.0.0.0:9090
          -e SYNNAX_VERBOSE=true -e SYNNAX_INSECURE=true -e SYNNAX_MEM=false -e
          SYNNAX_LICENSE_KEY=${{ secrets.SYNNAX_LICENSE_KEY }}
          ghcr.io/synnaxlabs/synnax:${GITHUB_SHA}

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: client/py/pyproject.toml
          cache: poetry

      - name: Install Dependencies
        run: poetry install
        working-directory: client/py

      - name: Python Test with Current Server
        run: poetry run pytest
        working-directory: client/py

      - name: Stop Current Server
        if: always() && steps.start_current.outcome == 'success'
        run: |
          docker logs synnax-current
          docker stop synnax-current
          docker rm synnax-current
