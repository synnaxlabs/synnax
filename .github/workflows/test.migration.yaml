name: Test - Migration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - rc
    paths:
      - .github/workflows/test.migration.yaml
      - alamos/go/**
      - alamos/py/**
      - aspen/**
      - cesium/**
      - client/py/**
      - freighter/go/**
      - freighter/py/**
      - synnax/**
      - x/go/**
  workflow_dispatch:

permissions:
  packages: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Start Main Server
        id: start_main
        run: docker run -d --name synnax-main -p 9090:9090 -v data:/usr/local/synnax/data -e SYNNAX_DATA=/usr/local/synnax/data -e SYNNAX_LISTEN=0.0.0.0:9090 -e SYNNAX_VERBOSE=true -e SYNNAX_INSECURE=true -e SYNNAX_MEM=false -e SYNNAX_LICENSE_KEY=${{ secrets.SYNNAX_LICENSE_KEY }} ghcr.io/synnaxlabs/synnax:latest

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: client/py/pyproject.toml
          cache: poetry

      - name: Install Dependencies
        run: poetry install
        working-directory: client/py

      - name: Python Test with Main Server
        run: poetry run pytest
        working-directory: client/py

      - name: Stop Main Server
        if: always() && steps.start_main.outcome == 'success'
        run: |
          docker logs synnax-main
          docker stop synnax-main
          docker rm synnax-main

      - name: Checkout Current Branch
        uses: actions/checkout@v4

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Latest Earthly
        uses: earthly/actions-setup@v1

      - name: Build Current Server Image
        run: earthly --push +docker -tag=${GITHUB_SHA} -driver=false
        working-directory: synnax

      - name: Push Current Server Image to Github Container Registry
        run: docker push ghcr.io/synnaxlabs/synnax:${GITHUB_SHA}

      - name: Start Current Server
        id: start_current
        run: docker run -d --name synnax-current -p 9090:9090 -v data:/usr/local/synnax/data -e SYNNAX_DATA=/usr/local/synnax/data -e SYNNAX_LISTEN=0.0.0.0:9090 -e SYNNAX_VERBOSE=true -e SYNNAX_INSECURE=true -e SYNNAX_MEM=false -e SYNNAX_LICENSE_KEY=${{ secrets.SYNNAX_LICENSE_KEY }} ghcr.io/synnaxlabs/synnax:${GITHUB_SHA}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: client/py/pyproject.toml
          cache: poetry

      - name: Install Dependencies
        run: poetry install
        working-directory: client/py

      - name: Python Test with Current Server
        run: poetry run pytest
        working-directory: client/py

      - name: Stop Current Server
        if: always() && steps.start_current.outcome == 'success'
        run: |
          docker logs synnax-current
          docker stop synnax-current
          docker rm synnax-current
