name: Test - Driver
on:
  push:
    branches:
      - main
      - rc
  pull_request:
    branches:
      - main
      - rc
  workflow_dispatch:
permissions:
  contents: write
  packages: write
jobs:
  changes:
    name: Changes
    runs-on: ubuntu-latest
    outputs:
      cpp: ${{ steps.filter.outputs.cpp }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Diff Changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            cpp:
              - .github/workflows/test.driver.yaml
              - x/cpp/**
              - client/cpp/**
              - freighter/cpp/**
              - driver/**
  server:
    name: Server
    needs: changes
    runs-on: ubuntu-latest
    if: needs.changes.outputs.cpp == 'true' || needs.changes.outputs.py == 'true' || needs.changes.outputs.ts == 'true'
    env:
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Earthly
        uses: earthly/actions-setup@v1

      - name: Build Image
        run: earthly --push +docker -tag=${GITHUB_SHA} -driver=false
        working-directory: synnax

      - name: Push to Github Container Registry
        run: docker push ghcr.io/synnaxlabs/synnax:${GITHUB_SHA}

  test:
    name: Test Driver
    runs-on: ${{ matrix.os }}
    needs: server
    if: needs.changes.outputs.cpp == 'true'
    services:
      synnax:
        image: ghcr.io/synnaxlabs/synnax:${{ github.sha }}
        env:
          SYNNAX_LISTEN: localhost:9090
          SYNNAX_VERBOSE: true
          SYNNAX_INSECURE: true
          SYNNAX_MEM: true
          SYNNAX_LICENSE_KEY: ${{ secrets.SYNNAX_LICENSE_KEY }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 9090:9090
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Deps On Ubuntu
        run: |
          sudo apt-get install -y libmbedtls-dev libsystemd-dev

      - name: Update Submodules
        if: hashFiles('vendor/open62541/open62541/out') == ''
        run: git submodule update --init --recursive

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.8.1
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}-${{ matrix.os }}
          repository-cache: true

      - name: Test Driver
        run: bazel test --test_output=all //driver/... --test_tag_filters=-hardware --nocache_test_results
