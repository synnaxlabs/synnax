name: Test - NI Device Scanner Detection
#run-name: Test - Integration (${{ github.run_id }})

on:
  push:
    branches:
      - "sy-2746-ni-device-scanner-detection-failure"
  workflow_dispatch:

env:
  CACHE_SCOPE: deploy-synnax
  SKIP_BUILD: false
  REF_RUN_ID: '000000000000'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      SKIP_BUILD: ${{ steps.set-outputs.outputs.SKIP_BUILD }}
      REF_RUN_ID: ${{ steps.set-outputs.outputs.REF_RUN_ID }}
    steps:
      - name: Set outputs
        id: set-outputs
        env:
          SKIP_BUILD: ${{ env.SKIP_BUILD }}
          REF_RUN_ID: ${{ env.REF_RUN_ID }}
        run: |

          echo "SKIP_BUILD=${SKIP_BUILD}" >> $GITHUB_OUTPUT

          if [ "${SKIP_BUILD}" = "false" ]; then
            echo "REF_RUN_ID=${{ github.run_id }}" >> $GITHUB_OUTPUT
            echo "Variables set: SKIP_BUILD=${SKIP_BUILD}, REF_RUN_ID=${{ github.run_id }}"
          else
            echo "REF_RUN_ID=${REF_RUN_ID}" >> $GITHUB_OUTPUT
            echo "Variables set: SKIP_BUILD=${SKIP_BUILD}, REF_RUN_ID=${REF_RUN_ID}"
          fi

  build-windows-latest:
    name: Build Synnax (windows-latest)
    timeout-minutes: 60
    runs-on: windows-latest
    needs: setup
    steps:
      - name: Checkout Repository
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        uses: actions/checkout@v4

      - name: Setup Windows SDK
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v2
        with:
          sdk-version: 22000

      - name: Update Submodules
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        run: git submodule update --init --recursive

      - name: Setup Bazel
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: deploy-synnax-windows-latest
          repository-cache: true

      - name: Set up Go
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          cache-dependency-path: go.work.sum

      - name: Build Driver (Windows)
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        run: bazel --output_user_root=C:/tmp build --enable_platform_specific_config -c opt --announce_rc //driver

      - name: Move Driver to Assets  
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        shell: cmd
        run: |
          if not exist synnax\pkg\service\hardware\embedded\assets mkdir synnax\pkg\service\hardware\embedded\assets
          copy bazel-bin\driver\driver.exe synnax\pkg\service\hardware\embedded\assets\driver.exe

      - name: Get Version
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        id: version
        working-directory: synnax
        shell: cmd
        run: |
          for /f "tokens=*" %%i in (pkg\version\VERSION) do set VERSION=%%i
          echo VERSION=%VERSION%>> %GITHUB_OUTPUT%

      - name: Download Dependencies
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        working-directory: synnax
        run: go mod download

      - name: Build Server
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        working-directory: synnax
        run: go build -tags driver -o synnax-v${{ steps.version.outputs.VERSION }}-windows.exe

      - name: Test Binary Execution
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        continue-on-error: true
        shell: cmd
        run: |
          echo Testing binary execution...
          synnax\synnax-v${{ steps.version.outputs.VERSION }}-windows.exe version || echo ⚠️ Server binary check failed
          bazel-bin\driver\driver.exe version || echo ⚠️ Driver binary check failed

      - name: Skip Build (Windows Latest)
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'true' }}
        run: echo "Build skipped - using reference artifacts"

      - name: Upload Driver Binary as Artifact
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: driver-windows
          path: bazel-bin/driver/driver.exe
          retention-days: 7

      - name: Upload Server Binary as Artifact
        if: ${{ needs.setup.outputs.SKIP_BUILD == 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: synnax-server-windows
          path: synnax/synnax-v${{ steps.version.outputs.VERSION }}-windows.exe
          retention-days: 7
