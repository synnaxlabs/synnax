#  Copyright 2025 Synnax Labs, Inc.
#
#  Use of this software is governed by the Business Source License included in the file
#  licenses/BSL.txt.
#
#  As of the Change Date specified in that file, in accordance with the Business Source
#  License, use of this software will be governed by the Apache License, Version 2.0,
#  included in the file licenses/APL.txt.

from collections import namedtuple
from datetime import datetime
from typing import Any, Self

class ExtType(namedtuple("ExtType", "code data")):
    def __new__(cls: type[Self], code: Any, data: Any) -> Self: ...

class Timestamp:
    seconds: int
    nanoseconds: int

    def __init__(self, seconds: int, nanoseconds: int = 0) -> None: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __hash__(self) -> int: ...
    @staticmethod
    def from_bytes(b: bytes) -> Timestamp: ...
    def to_bytes(self) -> bytes: ...
    @staticmethod
    def from_unix(unix_sec: int | float) -> Timestamp: ...
    def to_unix(self) -> float: ...
    @staticmethod
    def from_unix_nano(unix_ns: int) -> Timestamp: ...
    def to_unix_nano(self) -> int: ...
    def to_datetime(self) -> datetime: ...
    @staticmethod
    def from_datetime(dt: datetime) -> Timestamp: ...
