// Copyright 2025 Synnax Labs, Inc.
//
// Use of this software is governed by the Business Source License included in the file
// licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with the Business Source
// License, use of this software will be governed by the Apache License, Version 2.0,
// included in the file licenses/APL.txt.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/echo.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_v1_2fecho_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_v1_2fecho_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h" // IWYU pragma: export
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/repeated_field.h" // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_v1_2fecho_2eproto

namespace google { namespace protobuf { namespace internal {
class AnyMetadata;
}}}

// Internal implementation detail -- do not use these members.
struct TableStruct_v1_2fecho_2eproto {
    static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_v1_2fecho_2eproto;
namespace integration { namespace v1 {
class Message;
struct MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
}}
namespace google { namespace protobuf {
}}

namespace integration { namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Message final
    : public ::google::protobuf::
          Message /* @@protoc_insertion_point(class_definition:integration.v1.Message)
                   */
{
public:
    inline Message(): Message(nullptr) {}
    ~Message() override;
    template<typename = void>
    explicit PROTOBUF_CONSTEXPR
        Message(::google::protobuf::internal::ConstantInitialized);

    Message(const Message &from);
    Message(Message &&from) noexcept: Message() { *this = ::std::move(from); }

    inline Message &operator=(const Message &from) {
        CopyFrom(from);
        return *this;
    }
    inline Message &operator=(Message &&from) noexcept {
        if (this == &from) return *this;
        if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetOwningArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
        ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const {
        return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance
        );
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields() {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor *descriptor() {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor *GetDescriptor() {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection *GetReflection() {
        return default_instance().GetMetadata().reflection;
    }
    static const Message &default_instance() { return *internal_default_instance(); }
    static inline const Message *internal_default_instance() {
        return reinterpret_cast<const Message *>(&_Message_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 0;

    friend void swap(Message &a, Message &b) { a.Swap(&b); }
    inline void Swap(Message *other) {
        if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetOwningArena() != nullptr &&
            GetOwningArena() == other->GetOwningArena()) {
#else // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetOwningArena() == other->GetOwningArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(Message *other) {
        if (other == this) return;
        ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    Message *New(::google::protobuf::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<Message>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const Message &from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const Message &from) { Message::MergeImpl(*this, from); }

private:
    static void MergeImpl(
        ::google::protobuf::Message &to_msg,
        const ::google::protobuf::Message &from_msg
    );

public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    ::size_t ByteSizeLong() const final;
    const char *_InternalParse(
        const char *ptr,
        ::google::protobuf::internal::ParseContext *ctx
    ) final;
    ::uint8_t *_InternalSerialize(
        ::uint8_t *target,
        ::google::protobuf::io::EpsCopyOutputStream *stream
    ) const final;
    int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

private:
    void SharedCtor(::google::protobuf::Arena *arena);
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(Message *other);

private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName() { return "integration.v1.Message"; }

protected:
    explicit Message(::google::protobuf::Arena *arena);

public:
    static const ClassData _class_data_;
    const ::google::protobuf::Message::ClassData *GetClassData() const final;

    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kMessageFieldNumber = 2,
        kIdFieldNumber = 1,
    };
    // string message = 2 [json_name = "message"];
    void clear_message();
    const std::string &message() const;
    template<typename Arg_ = const std::string &, typename... Args_>
    void set_message(Arg_ &&arg, Args_... args);
    std::string *mutable_message();
    PROTOBUF_NODISCARD std::string *release_message();
    void set_allocated_message(std::string *ptr);

private:
    const std::string &_internal_message() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string &value);
    std::string *_internal_mutable_message();

public:
    // uint32 id = 1 [json_name = "id"];
    void clear_id();
    ::uint32_t id() const;
    void set_id(::uint32_t value);

private:
    ::uint32_t _internal_id() const;
    void _internal_set_id(::uint32_t value);

public:
    // @@protoc_insertion_point(class_scope:integration.v1.Message)
private:
    class _Internal;

    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 38, 2> _table_;
    template<typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    typedef void InternalArenaConstructable_;
    typedef void DestructorSkippable_;
    struct Impl_ {
        ::google::protobuf::internal::ArenaStringPtr message_;
        ::uint32_t id_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_v1_2fecho_2eproto;
};

// ===================================================================


// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
// -------------------------------------------------------------------

// Message

// uint32 id = 1 [json_name = "id"];
inline void Message::clear_id() {
    _impl_.id_ = 0u;
}
inline ::uint32_t Message::id() const {
    // @@protoc_insertion_point(field_get:integration.v1.Message.id)
    return _internal_id();
}
inline void Message::set_id(::uint32_t value) {
    _internal_set_id(value);
    // @@protoc_insertion_point(field_set:integration.v1.Message.id)
}
inline ::uint32_t Message::_internal_id() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.id_;
}
inline void Message::_internal_set_id(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.id_ = value;
}

// string message = 2 [json_name = "message"];
inline void Message::clear_message() {
    _impl_.message_.ClearToEmpty();
}
inline const std::string &Message::message() const {
    // @@protoc_insertion_point(field_get:integration.v1.Message.message)
    return _internal_message();
}
template<typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_message(Arg_ &&arg, Args_... args) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.message_.Set(static_cast<Arg_ &&>(arg), args..., GetArenaForAllocation());
    // @@protoc_insertion_point(field_set:integration.v1.Message.message)
}
inline std::string *Message::mutable_message() {
    std::string *_s = _internal_mutable_message();
    // @@protoc_insertion_point(field_mutable:integration.v1.Message.message)
    return _s;
}
inline const std::string &Message::_internal_message() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.message_.Get();
}
inline void Message::_internal_set_message(const std::string &value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string *Message::_internal_mutable_message() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string *Message::release_message() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    // @@protoc_insertion_point(field_release:integration.v1.Message.message)
    return _impl_.message_.Release();
}
inline void Message::set_allocated_message(std::string *value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.message_.SetAllocated(value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if (_impl_.message_.IsDefault()) {
        _impl_.message_.Set("", GetArenaForAllocation());
    }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
       // @@protoc_insertion_point(field_set_allocated:integration.v1.Message.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}}


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif // GOOGLE_PROTOBUF_INCLUDED_v1_2fecho_2eproto_2epb_2eh
