// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: synnax/pkg/api/grpc/v1/ranger.proto

package v1

import (
	telem "github.com/synnaxlabs/x/telem"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RangeAliasSetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Range         string                 `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	Aliases       map[uint32]string      `protobuf:"bytes,2,rep,name=aliases,proto3" json:"aliases,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeAliasSetRequest) Reset() {
	*x = RangeAliasSetRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeAliasSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeAliasSetRequest) ProtoMessage() {}

func (x *RangeAliasSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeAliasSetRequest.ProtoReflect.Descriptor instead.
func (*RangeAliasSetRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{0}
}

func (x *RangeAliasSetRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *RangeAliasSetRequest) GetAliases() map[uint32]string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

type RangeAliasResolveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Range         string                 `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	Aliases       []string               `protobuf:"bytes,2,rep,name=aliases,proto3" json:"aliases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeAliasResolveRequest) Reset() {
	*x = RangeAliasResolveRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeAliasResolveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeAliasResolveRequest) ProtoMessage() {}

func (x *RangeAliasResolveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeAliasResolveRequest.ProtoReflect.Descriptor instead.
func (*RangeAliasResolveRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{1}
}

func (x *RangeAliasResolveRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *RangeAliasResolveRequest) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

type RangeAliasResolveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Aliases       map[string]uint32      `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeAliasResolveResponse) Reset() {
	*x = RangeAliasResolveResponse{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeAliasResolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeAliasResolveResponse) ProtoMessage() {}

func (x *RangeAliasResolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeAliasResolveResponse.ProtoReflect.Descriptor instead.
func (*RangeAliasResolveResponse) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{2}
}

func (x *RangeAliasResolveResponse) GetAliases() map[string]uint32 {
	if x != nil {
		return x.Aliases
	}
	return nil
}

type RangeAliasDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Range         string                 `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	Channels      []uint32               `protobuf:"varint,2,rep,packed,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeAliasDeleteRequest) Reset() {
	*x = RangeAliasDeleteRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeAliasDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeAliasDeleteRequest) ProtoMessage() {}

func (x *RangeAliasDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeAliasDeleteRequest.ProtoReflect.Descriptor instead.
func (*RangeAliasDeleteRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{3}
}

func (x *RangeAliasDeleteRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *RangeAliasDeleteRequest) GetChannels() []uint32 {
	if x != nil {
		return x.Channels
	}
	return nil
}

type RangeAliasListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Range         string                 `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeAliasListRequest) Reset() {
	*x = RangeAliasListRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeAliasListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeAliasListRequest) ProtoMessage() {}

func (x *RangeAliasListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeAliasListRequest.ProtoReflect.Descriptor instead.
func (*RangeAliasListRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{4}
}

func (x *RangeAliasListRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

type RangeAliasListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Aliases       map[uint32]string      `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeAliasListResponse) Reset() {
	*x = RangeAliasListResponse{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeAliasListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeAliasListResponse) ProtoMessage() {}

func (x *RangeAliasListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeAliasListResponse.ProtoReflect.Descriptor instead.
func (*RangeAliasListResponse) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{5}
}

func (x *RangeAliasListResponse) GetAliases() map[uint32]string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

type Range struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	TimeRange     *telem.PBTimeRange     `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Range) Reset() {
	*x = Range{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{6}
}

func (x *Range) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Range) GetTimeRange() *telem.PBTimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *Range) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RangeDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeDeleteRequest) Reset() {
	*x = RangeDeleteRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeDeleteRequest) ProtoMessage() {}

func (x *RangeDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeDeleteRequest.ProtoReflect.Descriptor instead.
func (*RangeDeleteRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{7}
}

func (x *RangeDeleteRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RangeCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ranges        []*Range               `protobuf:"bytes,1,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeCreateRequest) Reset() {
	*x = RangeCreateRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeCreateRequest) ProtoMessage() {}

func (x *RangeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeCreateRequest.ProtoReflect.Descriptor instead.
func (*RangeCreateRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{8}
}

func (x *RangeCreateRequest) GetRanges() []*Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type RangeCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ranges        []*Range               `protobuf:"bytes,1,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeCreateResponse) Reset() {
	*x = RangeCreateResponse{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeCreateResponse) ProtoMessage() {}

func (x *RangeCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeCreateResponse.ProtoReflect.Descriptor instead.
func (*RangeCreateResponse) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{9}
}

func (x *RangeCreateResponse) GetRanges() []*Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type RangeRetrieveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Names         []string               `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeRetrieveRequest) Reset() {
	*x = RangeRetrieveRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeRetrieveRequest) ProtoMessage() {}

func (x *RangeRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeRetrieveRequest.ProtoReflect.Descriptor instead.
func (*RangeRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{10}
}

func (x *RangeRetrieveRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *RangeRetrieveRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type RangeRetrieveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ranges        []*Range               `protobuf:"bytes,1,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeRetrieveResponse) Reset() {
	*x = RangeRetrieveResponse{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeRetrieveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeRetrieveResponse) ProtoMessage() {}

func (x *RangeRetrieveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeRetrieveResponse.ProtoReflect.Descriptor instead.
func (*RangeRetrieveResponse) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{11}
}

func (x *RangeRetrieveResponse) GetRanges() []*Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type RangeKVSetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RangeKey      string                 `protobuf:"bytes,1,opt,name=range_key,json=rangeKey,proto3" json:"range_key,omitempty"`
	Pairs         []*KVPair              `protobuf:"bytes,2,rep,name=pairs,proto3" json:"pairs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeKVSetRequest) Reset() {
	*x = RangeKVSetRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeKVSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeKVSetRequest) ProtoMessage() {}

func (x *RangeKVSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeKVSetRequest.ProtoReflect.Descriptor instead.
func (*RangeKVSetRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{12}
}

func (x *RangeKVSetRequest) GetRangeKey() string {
	if x != nil {
		return x.RangeKey
	}
	return ""
}

func (x *RangeKVSetRequest) GetPairs() []*KVPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type KVPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KVPair) Reset() {
	*x = KVPair{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KVPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVPair) ProtoMessage() {}

func (x *KVPair) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVPair.ProtoReflect.Descriptor instead.
func (*KVPair) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{13}
}

func (x *KVPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KVPair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RangeKVGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RangeKey      string                 `protobuf:"bytes,1,opt,name=range_key,json=rangeKey,proto3" json:"range_key,omitempty"`
	Keys          []string               `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeKVGetRequest) Reset() {
	*x = RangeKVGetRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeKVGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeKVGetRequest) ProtoMessage() {}

func (x *RangeKVGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeKVGetRequest.ProtoReflect.Descriptor instead.
func (*RangeKVGetRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{14}
}

func (x *RangeKVGetRequest) GetRangeKey() string {
	if x != nil {
		return x.RangeKey
	}
	return ""
}

func (x *RangeKVGetRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RangeKVGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pairs         []*KVPair              `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeKVGetResponse) Reset() {
	*x = RangeKVGetResponse{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeKVGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeKVGetResponse) ProtoMessage() {}

func (x *RangeKVGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeKVGetResponse.ProtoReflect.Descriptor instead.
func (*RangeKVGetResponse) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{15}
}

func (x *RangeKVGetResponse) GetPairs() []*KVPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type RangeKVDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RangeKey      string                 `protobuf:"bytes,1,opt,name=range_key,json=rangeKey,proto3" json:"range_key,omitempty"`
	Keys          []string               `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeKVDeleteRequest) Reset() {
	*x = RangeKVDeleteRequest{}
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeKVDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeKVDeleteRequest) ProtoMessage() {}

func (x *RangeKVDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeKVDeleteRequest.ProtoReflect.Descriptor instead.
func (*RangeKVDeleteRequest) Descriptor() ([]byte, []int) {
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP(), []int{16}
}

func (x *RangeKVDeleteRequest) GetRangeKey() string {
	if x != nil {
		return x.RangeKey
	}
	return ""
}

func (x *RangeKVDeleteRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_synnax_pkg_api_grpc_v1_ranger_proto protoreflect.FileDescriptor

var file_synnax_pkg_api_grpc_v1_ranger_proto_rawDesc = string([]byte{
	0x0a, 0x23, 0x73, 0x79, 0x6e, 0x6e, 0x61, 0x78, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x78, 0x2f, 0x67, 0x6f,
	0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x43, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x4a, 0x0a, 0x18, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0xa1,
	0x01, 0x0a, 0x19, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x4b, 0x0a, 0x17, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22,
	0x2d, 0x0a, 0x15, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x9b,
	0x01, 0x0a, 0x16, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73,
	0x1a, 0x3a, 0x0a, 0x0c, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x60, 0x0a, 0x05,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x2e, 0x50, 0x42, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28,
	0x0a, 0x12, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x3b, 0x0a, 0x12, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x13, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x15, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x11, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x56,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x56, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x22, 0x30, 0x0a,
	0x06, 0x4b, 0x56, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x44, 0x0a, 0x11, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x56, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x3a, 0x0a, 0x12, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x56,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x70,
	0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x56, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72,
	0x73, 0x22, 0x47, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x56, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x32, 0x57, 0x0a, 0x12, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x41, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x5d, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x45,
	0x78, 0x65, 0x63, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0x52, 0x0a, 0x12, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63,
	0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x50, 0x0a, 0x11, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4b,
	0x56, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x45,
	0x78, 0x65, 0x63, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x4b, 0x56, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x54, 0x0a, 0x11, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x4b, 0x56, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a,
	0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x4b, 0x56, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4b,
	0x56, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x56,
	0x0a, 0x14, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x56, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x56, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x56, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e,
	0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x69,
	0x0a, 0x18, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x04, 0x45, 0x78,
	0x65, 0x63, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x5c, 0x0a, 0x17, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x60, 0x0a, 0x15, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x47, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x80, 0x01, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6e, 0x6e, 0x61, 0x78, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x73,
	0x79, 0x6e, 0x6e, 0x61, 0x78, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x41, 0x70,
	0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12,
	0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x07, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescOnce sync.Once
	file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescData []byte
)

func file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescGZIP() []byte {
	file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescOnce.Do(func() {
		file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synnax_pkg_api_grpc_v1_ranger_proto_rawDesc), len(file_synnax_pkg_api_grpc_v1_ranger_proto_rawDesc)))
	})
	return file_synnax_pkg_api_grpc_v1_ranger_proto_rawDescData
}

var file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_synnax_pkg_api_grpc_v1_ranger_proto_goTypes = []any{
	(*RangeAliasSetRequest)(nil),      // 0: api.v1.RangeAliasSetRequest
	(*RangeAliasResolveRequest)(nil),  // 1: api.v1.RangeAliasResolveRequest
	(*RangeAliasResolveResponse)(nil), // 2: api.v1.RangeAliasResolveResponse
	(*RangeAliasDeleteRequest)(nil),   // 3: api.v1.RangeAliasDeleteRequest
	(*RangeAliasListRequest)(nil),     // 4: api.v1.RangeAliasListRequest
	(*RangeAliasListResponse)(nil),    // 5: api.v1.RangeAliasListResponse
	(*Range)(nil),                     // 6: api.v1.Range
	(*RangeDeleteRequest)(nil),        // 7: api.v1.RangeDeleteRequest
	(*RangeCreateRequest)(nil),        // 8: api.v1.RangeCreateRequest
	(*RangeCreateResponse)(nil),       // 9: api.v1.RangeCreateResponse
	(*RangeRetrieveRequest)(nil),      // 10: api.v1.RangeRetrieveRequest
	(*RangeRetrieveResponse)(nil),     // 11: api.v1.RangeRetrieveResponse
	(*RangeKVSetRequest)(nil),         // 12: api.v1.RangeKVSetRequest
	(*KVPair)(nil),                    // 13: api.v1.KVPair
	(*RangeKVGetRequest)(nil),         // 14: api.v1.RangeKVGetRequest
	(*RangeKVGetResponse)(nil),        // 15: api.v1.RangeKVGetResponse
	(*RangeKVDeleteRequest)(nil),      // 16: api.v1.RangeKVDeleteRequest
	nil,                               // 17: api.v1.RangeAliasSetRequest.AliasesEntry
	nil,                               // 18: api.v1.RangeAliasResolveResponse.AliasesEntry
	nil,                               // 19: api.v1.RangeAliasListResponse.AliasesEntry
	(*telem.PBTimeRange)(nil),         // 20: telem.PBTimeRange
	(*emptypb.Empty)(nil),             // 21: google.protobuf.Empty
}
var file_synnax_pkg_api_grpc_v1_ranger_proto_depIdxs = []int32{
	17, // 0: api.v1.RangeAliasSetRequest.aliases:type_name -> api.v1.RangeAliasSetRequest.AliasesEntry
	18, // 1: api.v1.RangeAliasResolveResponse.aliases:type_name -> api.v1.RangeAliasResolveResponse.AliasesEntry
	19, // 2: api.v1.RangeAliasListResponse.aliases:type_name -> api.v1.RangeAliasListResponse.AliasesEntry
	20, // 3: api.v1.Range.time_range:type_name -> telem.PBTimeRange
	6,  // 4: api.v1.RangeCreateRequest.ranges:type_name -> api.v1.Range
	6,  // 5: api.v1.RangeCreateResponse.ranges:type_name -> api.v1.Range
	6,  // 6: api.v1.RangeRetrieveResponse.ranges:type_name -> api.v1.Range
	13, // 7: api.v1.RangeKVSetRequest.pairs:type_name -> api.v1.KVPair
	13, // 8: api.v1.RangeKVGetResponse.pairs:type_name -> api.v1.KVPair
	8,  // 9: api.v1.RangeCreateService.Exec:input_type -> api.v1.RangeCreateRequest
	10, // 10: api.v1.RangeRetrieveService.Exec:input_type -> api.v1.RangeRetrieveRequest
	7,  // 11: api.v1.RangeDeleteService.Exec:input_type -> api.v1.RangeDeleteRequest
	12, // 12: api.v1.RangeKVSetService.Exec:input_type -> api.v1.RangeKVSetRequest
	14, // 13: api.v1.RangeKVGetService.Exec:input_type -> api.v1.RangeKVGetRequest
	16, // 14: api.v1.RangeKVDeleteService.Exec:input_type -> api.v1.RangeKVDeleteRequest
	0,  // 15: api.v1.RangeAliasSetService.Exec:input_type -> api.v1.RangeAliasSetRequest
	1,  // 16: api.v1.RangeAliasResolveService.Exec:input_type -> api.v1.RangeAliasResolveRequest
	3,  // 17: api.v1.RangeAliasDeleteService.Exec:input_type -> api.v1.RangeAliasDeleteRequest
	4,  // 18: api.v1.RangeAliasListService.Exec:input_type -> api.v1.RangeAliasListRequest
	9,  // 19: api.v1.RangeCreateService.Exec:output_type -> api.v1.RangeCreateResponse
	11, // 20: api.v1.RangeRetrieveService.Exec:output_type -> api.v1.RangeRetrieveResponse
	21, // 21: api.v1.RangeDeleteService.Exec:output_type -> google.protobuf.Empty
	21, // 22: api.v1.RangeKVSetService.Exec:output_type -> google.protobuf.Empty
	15, // 23: api.v1.RangeKVGetService.Exec:output_type -> api.v1.RangeKVGetResponse
	21, // 24: api.v1.RangeKVDeleteService.Exec:output_type -> google.protobuf.Empty
	21, // 25: api.v1.RangeAliasSetService.Exec:output_type -> google.protobuf.Empty
	2,  // 26: api.v1.RangeAliasResolveService.Exec:output_type -> api.v1.RangeAliasResolveResponse
	21, // 27: api.v1.RangeAliasDeleteService.Exec:output_type -> google.protobuf.Empty
	5,  // 28: api.v1.RangeAliasListService.Exec:output_type -> api.v1.RangeAliasListResponse
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_synnax_pkg_api_grpc_v1_ranger_proto_init() }
func file_synnax_pkg_api_grpc_v1_ranger_proto_init() {
	if File_synnax_pkg_api_grpc_v1_ranger_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synnax_pkg_api_grpc_v1_ranger_proto_rawDesc), len(file_synnax_pkg_api_grpc_v1_ranger_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   10,
		},
		GoTypes:           file_synnax_pkg_api_grpc_v1_ranger_proto_goTypes,
		DependencyIndexes: file_synnax_pkg_api_grpc_v1_ranger_proto_depIdxs,
		MessageInfos:      file_synnax_pkg_api_grpc_v1_ranger_proto_msgTypes,
	}.Build()
	File_synnax_pkg_api_grpc_v1_ranger_proto = out.File
	file_synnax_pkg_api_grpc_v1_ranger_proto_goTypes = nil
	file_synnax_pkg_api_grpc_v1_ranger_proto_depIdxs = nil
}
