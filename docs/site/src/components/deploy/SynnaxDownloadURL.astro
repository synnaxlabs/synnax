---
import CodeI from "@/components/code/CodeI.astro";
const { os } = Astro.props;

const VERSION =
    "https://raw.githubusercontent.com/synnaxlabs/synnax/main/core/pkg/version/VERSION";
const version = await (await fetch(VERSION)).text();
const url = `github.com/synnaxlabs/synnax/releases/download/synnax-v${version.trim()}/synnax-v${version.trim()}-${os.toLowerCase()}`;
let code = `curl -LO ${url}`;
let lang = "bash";
if (os === "windows") {
    lang = "powershell";
    code = `$ErrorActionPreference="Stop"; [Net.ServicePointManager]::SecurityProtocol=[Net.SecurityProtocolType]::Tls12; $ProgressPreference='SilentlyContinue'; $null=New-Item -Type Directory -Force $env:appdata/synnax; Invoke-WebRequest -Uri ${url} -OutFile synnax.exe; Copy-Item -Force "synnax.exe" -Destination $env:appdata/synnax; if (-not [Environment]::GetEnvironmentVariable("Path", "User").Contains("%APPDATA%\synnax")) { [Environment]::SetEnvironmentVariable("Path", [Environment]::GetEnvironmentVariable("Path", "User") + ";%APPDATA%\synnax", "User"); }; $env:PATH += ";$env:appdata\synnax"`;
}
---

<CodeI lang={lang} code={code} theme="css-variables" wrap={os === "windows"} />
